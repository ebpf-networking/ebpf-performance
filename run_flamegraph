#!/bin/bash -x
function run_server()
{
  kubectl run pod1 --image=networkstatic/iperf3 --overrides="{\"spec\": { \"nodeSelector\": {\"kubernetes.io/hostname\": \"$1\"}}}" --command -- iperf3 -s 
}

function run_client()
{
  ipq=$(kubectl get pods pod1 -o json|jq ".status.podIP")
  ipq1=${ipq#\"}
  ip=${ipq1%\"}
  kubectl run pod2 --image=networkstatic/iperf3 --overrides="{\"spec\": { \"nodeSelector\": {\"kubernetes.io/hostname\": \"$1\"}}}" --command -- iperf3 -c $ip -t 70
}

function hostip_of()
{
  hostipq=$(kubectl get pods $1 -o json|jq ".status.hostIP")
  hostipq1=${hostipq#\"}
  hostip=${hostipq1%\"}
  echo $hostip
}

function uid_of()
{
  uidq=$(kubectl get pods $1 -o json|jq ".metadata.uid")
  uidq1=${uidq#\"}
  uid=${uidq1%\"}
  echo $uid
}

function data_of()
{
  tail -n 1 $1 |
	  awk '{if ( $8 == "Mbits/sec") print $7*1e6*60; else if ( $8 == "Gbits/sec" print $7*1e9*60;}'
}
server_hostname=$1
client_hostname=$2
output_dir=$3
mkdir -p ${output_dir}
#sudo sh -c "echo 0  > /proc/sys/kernel/kptr_restrict"
#sudo sh -c "echo -1 > /proc/sys/kernel/perf_event_paranoid"
run_server ${server_hostname}
server_hostip=$(hostip_of pod1)
server_uid=$(uid_of pod1)
sleep 10
run_client ${client_hostname}
client_hostip=$(hostip_of pod2)
client_uid=$(uid_of pod2)
sleep 5
server_start_cpu=$(ssh -n ${server_hostip} ~/workspace/ebpf-performance/cpuacct_of ${server_uid})
client_start_cpu=$(ssh -n ${client_hostip} ~/workspace/ebpf-performance/cpuacct_of ${client_uid})
ssh -n ${server_hostip} ~/workspace/ebpf-performance/perf_of ${server_uid} &
ssh -n ${client_hostip} ~/workspace/ebpf-performance/perf_of ${client_uid}
wait
server_end_cpu=$(ssh -n ${server_hostip} ~/workspace/ebpf-performance/cpuacct_of ${server_uid})
client_end_cpu=$(ssh -n ${client_hostip} ~/workspace/ebpf-performance/cpuacct_of ${client_uid})
sleep 20
kubectl logs pod1 --tail=10 >${output_dir}/server.log
ssh -n ${server_hostip} ~/workspace/ebpf-performance/generate_flamegraph >${output_dir}/server-flamegraph.svg
ssh -n ${client_hostip} ~/workspace/ebpf-performance/generate_flamegraph >${output_dir}/client-flamegraph.svg
typeset -i server_cpu=${server_end_cpu}-${server_start_cpu}
typeset -i client_cpu=${client_end_cpu}-${client_start_cpu}
echo "server cpu=${server_cpu}" >${output_dir}/server.cpu
echo "client cpu=${client_cpu}" >${output_dir}/client.cpu
total_data=data_of ${output_dir}/server.log
echo "${server_cpu} ${total_data}"|awk '{print $2/$1)' >${output_dir}/server_per_tick
echo "${client_cpu} ${total_data}"|awk '{print $2/$1)' >${output_dir}/client_per_tick
kubectl delete pod pod1
kubectl delete pod pod2
ssh -n ${server_hostip} rm -f perf.data
ssh -n ${client_hostip} rm -f perf.data
cd ${output_dir} && (
  git add .
  git commit -m Flamegraph
  git push origin main
)
